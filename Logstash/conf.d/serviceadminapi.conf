filter{
  if [type] == "serviceadminapi" {
    #grok {
    #  match => { "message" => "(?<timestamp>\d{4}/\d{2}/\d{2} %{TIME}) %{WORD:level} - %{WORD:class} - (?<information>(.|\r|\n)*)" }
    #  match => { "message" => "(?<timestamp>\d{4}/\d{2}/\d{2} %{TIME}) %{WORD:level}  - %{WORD:class} - (?<information>(.|\r|\n)*)" }
    #}
    json {
			source => "message"
		}
		if [loggerName] == "vn.com.vndirect.utils.RequestLOG" {
			ruby {
        init => "
          require 'json'
          SEPARATOR = '>'
          def flatten_json event, source, target
            obj = event.get(source)
            obj = JSON.parse(obj) unless obj.is_a? Hash
            value = {}

            if obj.is_a? Hash
              flatten_object(obj, nil, value)
            else
              flatten_array(obj, nil, value)
            end

            event.set(target, value)
          end

          def flatten_object obj, pname=nil, target
            obj.each {|k,v|
              p = pname.nil?? k : [pname,k].join(SEPARATOR)
              if v.is_a? Array
                flatten_array(v, p, target)
              elsif v.is_a? Hash
                flatten_object(v,p,target)
              else
                target[p] = v
              end
            }
          end

          def flatten_array array, pname, target
            array.each_with_index {|v,i|
              p = pname.nil?? i : [pname,i].join(SEPARATOR)
              if v.is_a? Hash
                flatten_object(v, p, target)
              else
                target[p] = v
              end
            }
          end
        "
        code => "flatten_json(event, 'message', 'mobj') if event.get('message').to_s.include? ':'"
      }
		}
    date {
      	match => [ "timeMillis" , "UNIX_MS" ]
      	target => "@timestamp"
      	locale => "en"
      	timezone => "Asia/Ho_Chi_Minh"
    }
  }
}
