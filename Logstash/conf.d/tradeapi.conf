filter{  
  if [type] == "tradeapi" {
    grok {
      match => { "message" => "(?<timestamp>\d{4}/\d{2}/\d{2} %{TIME}) OFF\s+- EventLogger - (?<eventType>Place.*) \[.*(?<accountNumber>[0-9]{10,11}).*\{side: (?<side>[A-Z]{2}), symbol: (?<symbol>[A-Z0-9]{2,}), orderType: (?<orderType>[A-Z]{2,}), limitPrice: %{NUMBER:limitPrice}, quantity: %{NUMBER:quantity}, user: (?<username>[\S]+), via: (?<via>[\S]+), term: (?<term>[\S]+)\}\" remoteAddress=\"%{IP:remoteAddress}\".*" }
      match => { "message" => "(?<timestamp>\d{4}/\d{2}/\d{2} %{TIME}) OFF\s+- EventLogger - (?<eventType>Replace.*) \[.*accountNumber=\"(?<accountNumber>[0-9]{10,11})\".*quantity=%{NUMBER:quantity}.*price=%{NUMBER:price}.*orderId=\"(?<orderId>[\S]+)\" remoteAddress=\"%{IP:remoteAddress}\".*" }
      match => { "message" => "(?<timestamp>\d{4}/\d{2}/\d{2} %{TIME}) OFF\s+- EventLogger - (?<eventType>Cancel.*) \[.*accountNumber=\"(?<accountNumber>[0-9]{10,11})\".*orderId=\"(?<orderId>[\S]+)\" remoteAddress=\"%{IP:remoteAddress}\".*" }
      match => { "message" => "(?<timestamp>\d{4}/\d{2}/\d{2} %{TIME}) (?<level>ERROR)" }
      match => { "message" => "(?<timestamp>\d{4}/\d{2}/\d{2} %{TIME})" }
    }
    date {
      match => [ "timestamp" , "YYYY/MM/dd HH:mm:ss.SSS" ]
      target => "@timestamp"
      locale => "en"
      timezone => "Asia/Ho_Chi_Minh"
    }
  }
}
